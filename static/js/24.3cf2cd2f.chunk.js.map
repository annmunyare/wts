{"version":3,"sources":["views/Dashboard/Dashboard.js"],"names":["brandPrimary","lazy","__webpack_require__","e","then","bind","getStyle","brandSuccess","brandInfo","brandDanger","cardChartData1","label","backgroundColor","borderColor","data","cardChartData2","CustomTooltips","Math","min","apply","max","random","floor","data1","data2","data3","i","push","hexToRgba","ceil","Dashboard","props","_this","Object","C_xampp_htdocs_coreui_free_react_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_xampp_htdocs_coreui_free_react_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_xampp_htdocs_coreui_free_react_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","toggle","C_xampp_htdocs_coreui_free_react_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","onRadioBtnClick","state","dropdownOpen","radioSelected","setState","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","reactstrap__WEBPACK_IMPORTED_MODULE_8__","sm","width","height","src","frameborder","allowFullScreen","Component"],"mappings":"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","file":"static/js/24.3cf2cd2f.chunk.js","sourcesContent":["import React, { Component, lazy, Suspense } from \"react\";\r\nimport { Bar, Line } from \"react-chartjs-2\";\r\nimport {\r\n  Badge,\r\n  Button,\r\n  ButtonDropdown,\r\n  ButtonGroup,\r\n  ButtonToolbar,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  CardHeader,\r\n  CardTitle,\r\n  Col,\r\n  Dropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  Progress,\r\n  Row,\r\n  Table\r\n} from \"reactstrap\";\r\nimport { CustomTooltips } from \"@coreui/coreui-plugin-chartjs-custom-tooltips\";\r\nimport { getStyle, hexToRgba } from \"@coreui/coreui/dist/js/coreui-utilities\";\r\n\r\n// import Widget03 from '../../views/Widgets/Widget03'\r\nconst Widget03 = lazy(() => import(\"../../views/Widgets/Widget03\"));\r\nconst Loading = () => <div>Loading...</div>;\r\n\r\nconst brandPrimary = getStyle(\"--primary\");\r\nconst brandSuccess = getStyle(\"--success\");\r\nconst brandInfo = getStyle(\"--info\");\r\nconst brandWarning = getStyle(\"--warning\");\r\nconst brandDanger = getStyle(\"--danger\");\r\n\r\n// Card Chart 1\r\nconst cardChartData1 = {\r\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\r\n  datasets: [\r\n    {\r\n      label: \"My First dataset\",\r\n      backgroundColor: brandPrimary,\r\n      borderColor: \"rgba(255,255,255,.55)\",\r\n      data: [65, 59, 84, 84, 51, 55, 40]\r\n    }\r\n  ]\r\n};\r\n\r\nconst cardChartOpts1 = {\r\n  tooltips: {\r\n    enabled: false,\r\n    custom: CustomTooltips\r\n  },\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          color: \"transparent\",\r\n          zeroLineColor: \"transparent\"\r\n        },\r\n        ticks: {\r\n          fontSize: 2,\r\n          fontColor: \"transparent\"\r\n        }\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        display: false,\r\n        ticks: {\r\n          display: false,\r\n          min: Math.min.apply(Math, cardChartData1.datasets[0].data) - 5,\r\n          max: Math.max.apply(Math, cardChartData1.datasets[0].data) + 5\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  elements: {\r\n    line: {\r\n      borderWidth: 1\r\n    },\r\n    point: {\r\n      radius: 4,\r\n      hitRadius: 10,\r\n      hoverRadius: 4\r\n    }\r\n  }\r\n};\r\n\r\n// Card Chart 2\r\nconst cardChartData2 = {\r\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\r\n  datasets: [\r\n    {\r\n      label: \"My First dataset\",\r\n      backgroundColor: brandInfo,\r\n      borderColor: \"rgba(255,255,255,.55)\",\r\n      data: [1, 18, 9, 17, 34, 22, 11]\r\n    }\r\n  ]\r\n};\r\n\r\nconst cardChartOpts2 = {\r\n  tooltips: {\r\n    enabled: false,\r\n    custom: CustomTooltips\r\n  },\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          color: \"transparent\",\r\n          zeroLineColor: \"transparent\"\r\n        },\r\n        ticks: {\r\n          fontSize: 2,\r\n          fontColor: \"transparent\"\r\n        }\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        display: false,\r\n        ticks: {\r\n          display: false,\r\n          min: Math.min.apply(Math, cardChartData2.datasets[0].data) - 5,\r\n          max: Math.max.apply(Math, cardChartData2.datasets[0].data) + 5\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  elements: {\r\n    line: {\r\n      tension: 0.00001,\r\n      borderWidth: 1\r\n    },\r\n    point: {\r\n      radius: 4,\r\n      hitRadius: 10,\r\n      hoverRadius: 4\r\n    }\r\n  }\r\n};\r\n\r\n// Card Chart 3\r\nconst cardChartData3 = {\r\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\r\n  datasets: [\r\n    {\r\n      label: \"My First dataset\",\r\n      backgroundColor: \"rgba(255,255,255,.2)\",\r\n      borderColor: \"rgba(255,255,255,.55)\",\r\n      data: [78, 81, 80, 45, 34, 12, 40]\r\n    }\r\n  ]\r\n};\r\n\r\nconst cardChartOpts3 = {\r\n  tooltips: {\r\n    enabled: false,\r\n    custom: CustomTooltips\r\n  },\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        display: false\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        display: false\r\n      }\r\n    ]\r\n  },\r\n  elements: {\r\n    line: {\r\n      borderWidth: 2\r\n    },\r\n    point: {\r\n      radius: 0,\r\n      hitRadius: 10,\r\n      hoverRadius: 4\r\n    }\r\n  }\r\n};\r\n\r\n// Card Chart 4\r\nconst cardChartData4 = {\r\n  labels: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n  datasets: [\r\n    {\r\n      label: \"My First dataset\",\r\n      backgroundColor: \"rgba(255,255,255,.3)\",\r\n      borderColor: \"transparent\",\r\n      data: [78, 81, 80, 45, 34, 12, 40, 75, 34, 89, 32, 68, 54, 72, 18, 98]\r\n    }\r\n  ]\r\n};\r\n\r\nconst cardChartOpts4 = {\r\n  tooltips: {\r\n    enabled: false,\r\n    custom: CustomTooltips\r\n  },\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        display: false,\r\n        barPercentage: 0.6\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        display: false\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\n// Social Box Chart\r\nconst socialBoxData = [\r\n  { data: [65, 59, 84, 84, 51, 55, 40], label: \"facebook\" },\r\n  { data: [1, 13, 9, 17, 34, 41, 38], label: \"twitter\" },\r\n  { data: [78, 81, 80, 45, 34, 12, 40], label: \"linkedin\" },\r\n  { data: [35, 23, 56, 22, 97, 23, 64], label: \"google\" }\r\n];\r\n\r\nconst makeSocialBoxData = dataSetNo => {\r\n  const dataset = socialBoxData[dataSetNo];\r\n  const data = {\r\n    labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\r\n    datasets: [\r\n      {\r\n        backgroundColor: \"rgba(255,255,255,.1)\",\r\n        borderColor: \"rgba(255,255,255,.55)\",\r\n        pointHoverBackgroundColor: \"#fff\",\r\n        borderWidth: 2,\r\n        data: dataset.data,\r\n        label: dataset.label\r\n      }\r\n    ]\r\n  };\r\n  return () => data;\r\n};\r\n\r\nconst socialChartOpts = {\r\n  tooltips: {\r\n    enabled: false,\r\n    custom: CustomTooltips\r\n  },\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        display: false\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        display: false\r\n      }\r\n    ]\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 0,\r\n      hitRadius: 10,\r\n      hoverRadius: 4,\r\n      hoverBorderWidth: 3\r\n    }\r\n  }\r\n};\r\n\r\n// sparkline charts\r\nconst sparkLineChartData = [\r\n  {\r\n    data: [35, 23, 56, 22, 97, 23, 64],\r\n    label: \"New Clients\"\r\n  },\r\n  {\r\n    data: [65, 59, 84, 84, 51, 55, 40],\r\n    label: \"Recurring Clients\"\r\n  },\r\n  {\r\n    data: [35, 23, 56, 22, 97, 23, 64],\r\n    label: \"Pageviews\"\r\n  },\r\n  {\r\n    data: [65, 59, 84, 84, 51, 55, 40],\r\n    label: \"Organic\"\r\n  },\r\n  {\r\n    data: [78, 81, 80, 45, 34, 12, 40],\r\n    label: \"CTR\"\r\n  },\r\n  {\r\n    data: [1, 13, 9, 17, 34, 41, 38],\r\n    label: \"Bounce Rate\"\r\n  }\r\n];\r\n\r\nconst makeSparkLineData = (dataSetNo, variant) => {\r\n  const dataset = sparkLineChartData[dataSetNo];\r\n  const data = {\r\n    labels: [\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n      \"Sunday\"\r\n    ],\r\n    datasets: [\r\n      {\r\n        backgroundColor: \"transparent\",\r\n        borderColor: variant ? variant : \"#c2cfd6\",\r\n        data: dataset.data,\r\n        label: dataset.label\r\n      }\r\n    ]\r\n  };\r\n  return () => data;\r\n};\r\n\r\nconst sparklineChartOpts = {\r\n  tooltips: {\r\n    enabled: false,\r\n    custom: CustomTooltips\r\n  },\r\n  responsive: true,\r\n  maintainAspectRatio: true,\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        display: false\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        display: false\r\n      }\r\n    ]\r\n  },\r\n  elements: {\r\n    line: {\r\n      borderWidth: 2\r\n    },\r\n    point: {\r\n      radius: 0,\r\n      hitRadius: 10,\r\n      hoverRadius: 4,\r\n      hoverBorderWidth: 3\r\n    }\r\n  },\r\n  legend: {\r\n    display: false\r\n  }\r\n};\r\n\r\n// Main Chart\r\n\r\n//Random Numbers\r\nfunction random(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nvar elements = 27;\r\nvar data1 = [];\r\nvar data2 = [];\r\nvar data3 = [];\r\n\r\nfor (var i = 0; i <= elements; i++) {\r\n  data1.push(random(50, 200));\r\n  data2.push(random(80, 100));\r\n  data3.push(65);\r\n}\r\n\r\nconst mainChart = {\r\n  labels: [\r\n    \"Mo\",\r\n    \"Tu\",\r\n    \"We\",\r\n    \"Th\",\r\n    \"Fr\",\r\n    \"Sa\",\r\n    \"Su\",\r\n    \"Mo\",\r\n    \"Tu\",\r\n    \"We\",\r\n    \"Th\",\r\n    \"Fr\",\r\n    \"Sa\",\r\n    \"Su\",\r\n    \"Mo\",\r\n    \"Tu\",\r\n    \"We\",\r\n    \"Th\",\r\n    \"Fr\",\r\n    \"Sa\",\r\n    \"Su\",\r\n    \"Mo\",\r\n    \"Tu\",\r\n    \"We\",\r\n    \"Th\",\r\n    \"Fr\",\r\n    \"Sa\",\r\n    \"Su\"\r\n  ],\r\n  datasets: [\r\n    {\r\n      label: \"Sent\",\r\n      backgroundColor: hexToRgba(brandInfo, 10),\r\n      borderColor: brandInfo,\r\n      pointHoverBackgroundColor: \"#fff\",\r\n      borderWidth: 2,\r\n      data: data1\r\n    },\r\n    {\r\n      label: \"Pending\",\r\n      backgroundColor: \"transparent\",\r\n      borderColor: brandSuccess,\r\n      pointHoverBackgroundColor: \"#fff\",\r\n      borderWidth: 2,\r\n      data: data2\r\n    },\r\n    {\r\n      label: \"Failed\",\r\n      backgroundColor: \"transparent\",\r\n      borderColor: brandDanger,\r\n      pointHoverBackgroundColor: \"#fff\",\r\n      borderWidth: 1,\r\n      borderDash: [8, 5],\r\n      data: data3\r\n    }\r\n  ]\r\n};\r\n\r\nconst mainChartOpts = {\r\n  tooltips: {\r\n    enabled: false,\r\n    custom: CustomTooltips,\r\n    intersect: true,\r\n    mode: \"index\",\r\n    position: \"nearest\",\r\n    callbacks: {\r\n      labelColor: function(tooltipItem, chart) {\r\n        return {\r\n          backgroundColor:\r\n            chart.data.datasets[tooltipItem.datasetIndex].borderColor\r\n        };\r\n      }\r\n    }\r\n  },\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          drawOnChartArea: false\r\n        }\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        ticks: {\r\n          beginAtZero: true,\r\n          maxTicksLimit: 5,\r\n          stepSize: Math.ceil(250 / 5),\r\n          max: 250\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 0,\r\n      hitRadius: 10,\r\n      hoverRadius: 4,\r\n      hoverBorderWidth: 3\r\n    }\r\n  }\r\n};\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.onRadioBtnClick = this.onRadioBtnClick.bind(this);\r\n\r\n    this.state = {\r\n      dropdownOpen: false,\r\n      radioSelected: 2\r\n    };\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      dropdownOpen: !this.state.dropdownOpen\r\n    });\r\n  }\r\n\r\n  onRadioBtnClick(radioSelected) {\r\n    this.setState({\r\n      radioSelected: radioSelected\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <Row>\r\n          <Col>\r\n            <Row>\r\n              <Col sm=\"5\">\r\n                <CardTitle className=\"mb-0\">Cash Balance</CardTitle>\r\n                <div className=\"small text-muted\">November 2018</div>\r\n              </Col>\r\n            </Row>\r\n            <div>\r\n              <iframe\r\n                width=\"933\"\r\n                height=\"700\"\r\n                src=\"https://app.powerbi.com/view?r=eyJrIjoiZDUwMDM3MTktZWVjMy00Nzc0LWIzNmUtNjNjM2Q2OWNkNjIyIiwidCI6ImFmZGYyOTdmLWI3MTMtNDVjZS1hMDcyLWVjYTJhMGVjMDUzMyIsImMiOjl9\"\r\n                frameborder=\"0\"\r\n                allowFullScreen=\"true\"\r\n              />\r\n              >\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Row>\r\n              <Col sm=\"5\">\r\n                <CardTitle className=\"mb-0\">\r\n                  Messages sent and Failled Messages\r\n                </CardTitle>\r\n                <div className=\"small text-muted\">November 2018</div>\r\n              </Col>\r\n            </Row>\r\n            <div>\r\n              <iframe\r\n                width=\"933\"\r\n                height=\"700\"\r\n                src=\"https://app.powerbi.com/view?r=eyJrIjoiMmE3NmQxODktYWE4YS00YzdlLTliZGYtNGIwYmZjZDNjMGMyIiwidCI6ImFmZGYyOTdmLWI3MTMtNDVjZS1hMDcyLWVjYTJhMGVjMDUzMyIsImMiOjl9\"\r\n                frameborder=\"0\"\r\n                allowFullScreen=\"true\"\r\n              />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n"],"sourceRoot":""}
{"version":3,"sources":["../node_modules/@coreui/coreui-plugin-chartjs-custom-tooltips/dist/umd/custom-tooltips.js","views/Dashboard/Dashboard.js"],"names":["exports","CustomTooltips","tooltipModel","_this","this","ClassName","ABOVE","BELOW","CHARTJS_TOOLTIP","NO_TRANSFORM","TOOLTIP_BODY","TOOLTIP_BODY_ITEM","TOOLTIP_BODY_ITEM_COLOR","TOOLTIP_BODY_ITEM_LABEL","TOOLTIP_BODY_ITEM_VALUE","TOOLTIP_HEADER","TOOLTIP_HEADER_ITEM","Selector","DIV","SPAN","TOOLTIP","_chart","canvas","id","_idMaker","Math","random","toString","_canvasId","_setCanvasId","tooltip","document","getElementById","createElement","className","parentNode","appendChild","opacity","classList","remove","yAlign","add","body","titleLines","title","tooltipHeader","forEach","tooltipHeaderTitle","innerHTML","tooltipBody","tooltipBodyItems","map","item","lines","i","tooltipBodyItem","colors","labelColors","tooltipBodyItemColor","style","backgroundColor","split","length","tooltipBodyItemLabel","tooltipBodyItemValue","pop","_tooltipBodyItemValue","positionY","offsetTop","positionX","offsetLeft","left","caretX","top","caretY","Object","defineProperty","value","factory","brandPrimary","lazy","__webpack_require__","e","then","bind","getStyle","brandSuccess","brandInfo","brandDanger","cardChartData1","label","borderColor","data","cardChartData2","min","apply","max","floor","data1","data2","data3","push","hexToRgba","ceil","Dashboard","props","C_xampp_htdocs_coreui_free_react_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","C_xampp_htdocs_coreui_free_react_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_xampp_htdocs_coreui_free_react_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","toggle","C_xampp_htdocs_coreui_free_react_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","onRadioBtnClick","state","dropdownOpen","radioSelected","setState","react__WEBPACK_IMPORTED_MODULE_6___default","a","reactstrap__WEBPACK_IMPORTED_MODULE_8__","sm","width","height","src","frameborder","allowFullScreen","Component"],"mappings":"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","file":"static/js/24.1ac88423.chunk.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : factory(global['custom-tooltips'] = {});\n})(this, function (exports) {\n  'use strict';\n  /**\n   * --------------------------------------------------------------------------\n   * CoreUI Plugins - Custom Tooltips for Chart.js (v1.2.0): custom-tooltips.js\n   * Licensed under MIT (https://coreui.io/license)\n   * --------------------------------------------------------------------------\n   */\n\n  function CustomTooltips(tooltipModel) {\n    var _this = this; // Add unique id if not exist\n\n\n    var _setCanvasId = function _setCanvasId() {\n      var _idMaker = function _idMaker() {\n        var _hex = 16;\n        var _multiplier = 0x10000;\n        return ((1 + Math.random()) * _multiplier | 0).toString(_hex);\n      };\n\n      var _canvasId = \"_canvas-\" + (_idMaker() + _idMaker());\n\n      _this._chart.canvas.id = _canvasId;\n      return _canvasId;\n    };\n\n    var ClassName = {\n      ABOVE: 'above',\n      BELOW: 'below',\n      CHARTJS_TOOLTIP: 'chartjs-tooltip',\n      NO_TRANSFORM: 'no-transform',\n      TOOLTIP_BODY: 'tooltip-body',\n      TOOLTIP_BODY_ITEM: 'tooltip-body-item',\n      TOOLTIP_BODY_ITEM_COLOR: 'tooltip-body-item-color',\n      TOOLTIP_BODY_ITEM_LABEL: 'tooltip-body-item-label',\n      TOOLTIP_BODY_ITEM_VALUE: 'tooltip-body-item-value',\n      TOOLTIP_HEADER: 'tooltip-header',\n      TOOLTIP_HEADER_ITEM: 'tooltip-header-item'\n    };\n    var Selector = {\n      DIV: 'div',\n      SPAN: 'span',\n      TOOLTIP: (this._chart.canvas.id || _setCanvasId()) + \"-tooltip\"\n    };\n    var tooltip = document.getElementById(Selector.TOOLTIP);\n\n    if (!tooltip) {\n      tooltip = document.createElement('div');\n      tooltip.id = Selector.TOOLTIP;\n      tooltip.className = ClassName.CHARTJS_TOOLTIP;\n\n      this._chart.canvas.parentNode.appendChild(tooltip);\n    } // Hide if no tooltip\n\n\n    if (tooltipModel.opacity === 0) {\n      tooltip.style.opacity = 0;\n      return;\n    } // Set caret Position\n\n\n    tooltip.classList.remove(ClassName.ABOVE, ClassName.BELOW, ClassName.NO_TRANSFORM);\n\n    if (tooltipModel.yAlign) {\n      tooltip.classList.add(tooltipModel.yAlign);\n    } else {\n      tooltip.classList.add(ClassName.NO_TRANSFORM);\n    } // Set Text\n\n\n    if (tooltipModel.body) {\n      var titleLines = tooltipModel.title || [];\n      var tooltipHeader = document.createElement(Selector.DIV);\n      tooltipHeader.className = ClassName.TOOLTIP_HEADER;\n      titleLines.forEach(function (title) {\n        var tooltipHeaderTitle = document.createElement(Selector.DIV);\n        tooltipHeaderTitle.className = ClassName.TOOLTIP_HEADER_ITEM;\n        tooltipHeaderTitle.innerHTML = title;\n        tooltipHeader.appendChild(tooltipHeaderTitle);\n      });\n      var tooltipBody = document.createElement(Selector.DIV);\n      tooltipBody.className = ClassName.TOOLTIP_BODY;\n      var tooltipBodyItems = tooltipModel.body.map(function (item) {\n        return item.lines;\n      });\n      tooltipBodyItems.forEach(function (item, i) {\n        var tooltipBodyItem = document.createElement(Selector.DIV);\n        tooltipBodyItem.className = ClassName.TOOLTIP_BODY_ITEM;\n        var colors = tooltipModel.labelColors[i];\n        var tooltipBodyItemColor = document.createElement(Selector.SPAN);\n        tooltipBodyItemColor.className = ClassName.TOOLTIP_BODY_ITEM_COLOR;\n        tooltipBodyItemColor.style.backgroundColor = colors.backgroundColor;\n        tooltipBodyItem.appendChild(tooltipBodyItemColor);\n\n        if (item[0].split(':').length > 1) {\n          var tooltipBodyItemLabel = document.createElement(Selector.SPAN);\n          tooltipBodyItemLabel.className = ClassName.TOOLTIP_BODY_ITEM_LABEL;\n          tooltipBodyItemLabel.innerHTML = item[0].split(': ')[0];\n          tooltipBodyItem.appendChild(tooltipBodyItemLabel);\n          var tooltipBodyItemValue = document.createElement(Selector.SPAN);\n          tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\n          tooltipBodyItemValue.innerHTML = item[0].split(': ').pop();\n          tooltipBodyItem.appendChild(tooltipBodyItemValue);\n        } else {\n          var _tooltipBodyItemValue = document.createElement(Selector.SPAN);\n\n          _tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\n          _tooltipBodyItemValue.innerHTML = item[0];\n          tooltipBodyItem.appendChild(_tooltipBodyItemValue);\n        }\n\n        tooltipBody.appendChild(tooltipBodyItem);\n      });\n      tooltip.innerHTML = '';\n      tooltip.appendChild(tooltipHeader);\n      tooltip.appendChild(tooltipBody);\n    }\n\n    var positionY = this._chart.canvas.offsetTop;\n    var positionX = this._chart.canvas.offsetLeft; // Display, position, and set styles for font\n\n    tooltip.style.opacity = 1;\n    tooltip.style.left = positionX + tooltipModel.caretX + \"px\";\n    tooltip.style.top = positionY + tooltipModel.caretY + \"px\";\n  }\n\n  exports.CustomTooltips = CustomTooltips;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","import React, { Component, lazy, Suspense } from \"react\";\r\nimport { Bar, Line } from \"react-chartjs-2\";\r\nimport {\r\n  Badge,\r\n  Button,\r\n  ButtonDropdown,\r\n  ButtonGroup,\r\n  ButtonToolbar,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  CardHeader,\r\n  CardTitle,\r\n  Col,\r\n  Dropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  Progress,\r\n  Row,\r\n  Table\r\n} from \"reactstrap\";\r\nimport { CustomTooltips } from \"@coreui/coreui-plugin-chartjs-custom-tooltips\";\r\nimport { getStyle, hexToRgba } from \"@coreui/coreui/dist/js/coreui-utilities\";\r\n\r\n// import Widget03 from '../../views/Widgets/Widget03'\r\nconst Widget03 = lazy(() => import(\"../../views/Widgets/Widget03\"));\r\nconst Loading = () => <div>Loading...</div>;\r\n\r\nconst brandPrimary = getStyle(\"--primary\");\r\nconst brandSuccess = getStyle(\"--success\");\r\nconst brandInfo = getStyle(\"--info\");\r\nconst brandWarning = getStyle(\"--warning\");\r\nconst brandDanger = getStyle(\"--danger\");\r\n\r\n// Card Chart 1\r\nconst cardChartData1 = {\r\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\r\n  datasets: [\r\n    {\r\n      label: \"My First dataset\",\r\n      backgroundColor: brandPrimary,\r\n      borderColor: \"rgba(255,255,255,.55)\",\r\n      data: [65, 59, 84, 84, 51, 55, 40]\r\n    }\r\n  ]\r\n};\r\n\r\nconst cardChartOpts1 = {\r\n  tooltips: {\r\n    enabled: false,\r\n    custom: CustomTooltips\r\n  },\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          color: \"transparent\",\r\n          zeroLineColor: \"transparent\"\r\n        },\r\n        ticks: {\r\n          fontSize: 2,\r\n          fontColor: \"transparent\"\r\n        }\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        display: false,\r\n        ticks: {\r\n          display: false,\r\n          min: Math.min.apply(Math, cardChartData1.datasets[0].data) - 5,\r\n          max: Math.max.apply(Math, cardChartData1.datasets[0].data) + 5\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  elements: {\r\n    line: {\r\n      borderWidth: 1\r\n    },\r\n    point: {\r\n      radius: 4,\r\n      hitRadius: 10,\r\n      hoverRadius: 4\r\n    }\r\n  }\r\n};\r\n\r\n// Card Chart 2\r\nconst cardChartData2 = {\r\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\r\n  datasets: [\r\n    {\r\n      label: \"My First dataset\",\r\n      backgroundColor: brandInfo,\r\n      borderColor: \"rgba(255,255,255,.55)\",\r\n      data: [1, 18, 9, 17, 34, 22, 11]\r\n    }\r\n  ]\r\n};\r\n\r\nconst cardChartOpts2 = {\r\n  tooltips: {\r\n    enabled: false,\r\n    custom: CustomTooltips\r\n  },\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          color: \"transparent\",\r\n          zeroLineColor: \"transparent\"\r\n        },\r\n        ticks: {\r\n          fontSize: 2,\r\n          fontColor: \"transparent\"\r\n        }\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        display: false,\r\n        ticks: {\r\n          display: false,\r\n          min: Math.min.apply(Math, cardChartData2.datasets[0].data) - 5,\r\n          max: Math.max.apply(Math, cardChartData2.datasets[0].data) + 5\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  elements: {\r\n    line: {\r\n      tension: 0.00001,\r\n      borderWidth: 1\r\n    },\r\n    point: {\r\n      radius: 4,\r\n      hitRadius: 10,\r\n      hoverRadius: 4\r\n    }\r\n  }\r\n};\r\n\r\n// Card Chart 3\r\nconst cardChartData3 = {\r\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\r\n  datasets: [\r\n    {\r\n      label: \"My First dataset\",\r\n      backgroundColor: \"rgba(255,255,255,.2)\",\r\n      borderColor: \"rgba(255,255,255,.55)\",\r\n      data: [78, 81, 80, 45, 34, 12, 40]\r\n    }\r\n  ]\r\n};\r\n\r\nconst cardChartOpts3 = {\r\n  tooltips: {\r\n    enabled: false,\r\n    custom: CustomTooltips\r\n  },\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        display: false\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        display: false\r\n      }\r\n    ]\r\n  },\r\n  elements: {\r\n    line: {\r\n      borderWidth: 2\r\n    },\r\n    point: {\r\n      radius: 0,\r\n      hitRadius: 10,\r\n      hoverRadius: 4\r\n    }\r\n  }\r\n};\r\n\r\n// Card Chart 4\r\nconst cardChartData4 = {\r\n  labels: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n  datasets: [\r\n    {\r\n      label: \"My First dataset\",\r\n      backgroundColor: \"rgba(255,255,255,.3)\",\r\n      borderColor: \"transparent\",\r\n      data: [78, 81, 80, 45, 34, 12, 40, 75, 34, 89, 32, 68, 54, 72, 18, 98]\r\n    }\r\n  ]\r\n};\r\n\r\nconst cardChartOpts4 = {\r\n  tooltips: {\r\n    enabled: false,\r\n    custom: CustomTooltips\r\n  },\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        display: false,\r\n        barPercentage: 0.6\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        display: false\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\n// Social Box Chart\r\nconst socialBoxData = [\r\n  { data: [65, 59, 84, 84, 51, 55, 40], label: \"facebook\" },\r\n  { data: [1, 13, 9, 17, 34, 41, 38], label: \"twitter\" },\r\n  { data: [78, 81, 80, 45, 34, 12, 40], label: \"linkedin\" },\r\n  { data: [35, 23, 56, 22, 97, 23, 64], label: \"google\" }\r\n];\r\n\r\nconst makeSocialBoxData = dataSetNo => {\r\n  const dataset = socialBoxData[dataSetNo];\r\n  const data = {\r\n    labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\r\n    datasets: [\r\n      {\r\n        backgroundColor: \"rgba(255,255,255,.1)\",\r\n        borderColor: \"rgba(255,255,255,.55)\",\r\n        pointHoverBackgroundColor: \"#fff\",\r\n        borderWidth: 2,\r\n        data: dataset.data,\r\n        label: dataset.label\r\n      }\r\n    ]\r\n  };\r\n  return () => data;\r\n};\r\n\r\nconst socialChartOpts = {\r\n  tooltips: {\r\n    enabled: false,\r\n    custom: CustomTooltips\r\n  },\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        display: false\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        display: false\r\n      }\r\n    ]\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 0,\r\n      hitRadius: 10,\r\n      hoverRadius: 4,\r\n      hoverBorderWidth: 3\r\n    }\r\n  }\r\n};\r\n\r\n// sparkline charts\r\nconst sparkLineChartData = [\r\n  {\r\n    data: [35, 23, 56, 22, 97, 23, 64],\r\n    label: \"New Clients\"\r\n  },\r\n  {\r\n    data: [65, 59, 84, 84, 51, 55, 40],\r\n    label: \"Recurring Clients\"\r\n  },\r\n  {\r\n    data: [35, 23, 56, 22, 97, 23, 64],\r\n    label: \"Pageviews\"\r\n  },\r\n  {\r\n    data: [65, 59, 84, 84, 51, 55, 40],\r\n    label: \"Organic\"\r\n  },\r\n  {\r\n    data: [78, 81, 80, 45, 34, 12, 40],\r\n    label: \"CTR\"\r\n  },\r\n  {\r\n    data: [1, 13, 9, 17, 34, 41, 38],\r\n    label: \"Bounce Rate\"\r\n  }\r\n];\r\n\r\nconst makeSparkLineData = (dataSetNo, variant) => {\r\n  const dataset = sparkLineChartData[dataSetNo];\r\n  const data = {\r\n    labels: [\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n      \"Sunday\"\r\n    ],\r\n    datasets: [\r\n      {\r\n        backgroundColor: \"transparent\",\r\n        borderColor: variant ? variant : \"#c2cfd6\",\r\n        data: dataset.data,\r\n        label: dataset.label\r\n      }\r\n    ]\r\n  };\r\n  return () => data;\r\n};\r\n\r\nconst sparklineChartOpts = {\r\n  tooltips: {\r\n    enabled: false,\r\n    custom: CustomTooltips\r\n  },\r\n  responsive: true,\r\n  maintainAspectRatio: true,\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        display: false\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        display: false\r\n      }\r\n    ]\r\n  },\r\n  elements: {\r\n    line: {\r\n      borderWidth: 2\r\n    },\r\n    point: {\r\n      radius: 0,\r\n      hitRadius: 10,\r\n      hoverRadius: 4,\r\n      hoverBorderWidth: 3\r\n    }\r\n  },\r\n  legend: {\r\n    display: false\r\n  }\r\n};\r\n\r\n// Main Chart\r\n\r\n//Random Numbers\r\nfunction random(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nvar elements = 27;\r\nvar data1 = [];\r\nvar data2 = [];\r\nvar data3 = [];\r\n\r\nfor (var i = 0; i <= elements; i++) {\r\n  data1.push(random(50, 200));\r\n  data2.push(random(80, 100));\r\n  data3.push(65);\r\n}\r\n\r\nconst mainChart = {\r\n  labels: [\r\n    \"Mo\",\r\n    \"Tu\",\r\n    \"We\",\r\n    \"Th\",\r\n    \"Fr\",\r\n    \"Sa\",\r\n    \"Su\",\r\n    \"Mo\",\r\n    \"Tu\",\r\n    \"We\",\r\n    \"Th\",\r\n    \"Fr\",\r\n    \"Sa\",\r\n    \"Su\",\r\n    \"Mo\",\r\n    \"Tu\",\r\n    \"We\",\r\n    \"Th\",\r\n    \"Fr\",\r\n    \"Sa\",\r\n    \"Su\",\r\n    \"Mo\",\r\n    \"Tu\",\r\n    \"We\",\r\n    \"Th\",\r\n    \"Fr\",\r\n    \"Sa\",\r\n    \"Su\"\r\n  ],\r\n  datasets: [\r\n    {\r\n      label: \"Sent\",\r\n      backgroundColor: hexToRgba(brandInfo, 10),\r\n      borderColor: brandInfo,\r\n      pointHoverBackgroundColor: \"#fff\",\r\n      borderWidth: 2,\r\n      data: data1\r\n    },\r\n    {\r\n      label: \"Pending\",\r\n      backgroundColor: \"transparent\",\r\n      borderColor: brandSuccess,\r\n      pointHoverBackgroundColor: \"#fff\",\r\n      borderWidth: 2,\r\n      data: data2\r\n    },\r\n    {\r\n      label: \"Failed\",\r\n      backgroundColor: \"transparent\",\r\n      borderColor: brandDanger,\r\n      pointHoverBackgroundColor: \"#fff\",\r\n      borderWidth: 1,\r\n      borderDash: [8, 5],\r\n      data: data3\r\n    }\r\n  ]\r\n};\r\n\r\nconst mainChartOpts = {\r\n  tooltips: {\r\n    enabled: false,\r\n    custom: CustomTooltips,\r\n    intersect: true,\r\n    mode: \"index\",\r\n    position: \"nearest\",\r\n    callbacks: {\r\n      labelColor: function(tooltipItem, chart) {\r\n        return {\r\n          backgroundColor:\r\n            chart.data.datasets[tooltipItem.datasetIndex].borderColor\r\n        };\r\n      }\r\n    }\r\n  },\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          drawOnChartArea: false\r\n        }\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        ticks: {\r\n          beginAtZero: true,\r\n          maxTicksLimit: 5,\r\n          stepSize: Math.ceil(250 / 5),\r\n          max: 250\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 0,\r\n      hitRadius: 10,\r\n      hoverRadius: 4,\r\n      hoverBorderWidth: 3\r\n    }\r\n  }\r\n};\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.onRadioBtnClick = this.onRadioBtnClick.bind(this);\r\n\r\n    this.state = {\r\n      dropdownOpen: false,\r\n      radioSelected: 2\r\n    };\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      dropdownOpen: !this.state.dropdownOpen\r\n    });\r\n  }\r\n\r\n  onRadioBtnClick(radioSelected) {\r\n    this.setState({\r\n      radioSelected: radioSelected\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <Row>\r\n          <Col>\r\n            <Row>\r\n              <Col sm=\"5\">\r\n                <CardTitle className=\"mb-0\">Cash Balance</CardTitle>\r\n                <div className=\"small text-muted\">November 2018</div>\r\n              </Col>\r\n            </Row>\r\n            <div>\r\n              <iframe\r\n                width=\"933\"\r\n                height=\"700\"\r\n                src=\"https://app.powerbi.com/view?r=eyJrIjoiZDUwMDM3MTktZWVjMy00Nzc0LWIzNmUtNjNjM2Q2OWNkNjIyIiwidCI6ImFmZGYyOTdmLWI3MTMtNDVjZS1hMDcyLWVjYTJhMGVjMDUzMyIsImMiOjl9\"\r\n                frameborder=\"0\"\r\n                allowFullScreen=\"true\"\r\n              />\r\n              >\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Row>\r\n              <Col sm=\"5\">\r\n                <CardTitle className=\"mb-0\">\r\n                  Messages sent and Failled Messages\r\n                </CardTitle>\r\n                <div className=\"small text-muted\">November 2018</div>\r\n              </Col>\r\n            </Row>\r\n            <div>\r\n              <iframe\r\n                width=\"933\"\r\n                height=\"700\"\r\n                src=\"https://app.powerbi.com/view?r=eyJrIjoiMmE3NmQxODktYWE4YS00YzdlLTliZGYtNGIwYmZjZDNjMGMyIiwidCI6ImFmZGYyOTdmLWI3MTMtNDVjZS1hMDcyLWVjYTJhMGVjMDUzMyIsImMiOjl9\"\r\n                frameborder=\"0\"\r\n                allowFullScreen=\"true\"\r\n              />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n"],"sourceRoot":""}